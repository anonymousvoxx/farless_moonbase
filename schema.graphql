interface TransactionBase {
  id: ID!
  date: DateTime!
  blockHash: String!
  blockNumber: Int!
  extrinisicHash: String
  success: Boolean!
}

enum BalanceEventType {
  Endowed
  DustLost
  Transfer
  BalanceSet
  Reserved
  Unreserved
  ReserveRepatriated
  Deposit
  Withdraw
  Slashed
}

type BalanceTransaction implements TransactionBase @entity {
  id: ID!
  date: DateTime!
  blockHash: String!
  blockNumber: Int!
  extrinisicHash: String
  success: Boolean!
  data: BalanceData
  event: BalanceEventType
}

union BalanceData = TransferData | OtherBalanceData | SetBalanceData

type TransferData {
  from: ID!
  to: ID!
  amount: BigInt!
  status: String
}

type SetBalanceData {
  who: ID!
  free: BigInt!
  reserved: BigInt!
}

type OtherBalanceData {
  account: ID!
  amount: BigInt!
}
